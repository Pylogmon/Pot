name: Package
on:
  push:
    branches: [ master ]
    tags-ignore: [ updater ]

jobs:
  change-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.outputstep.outputs.VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install git
        run: |
          sudo apt-get update
          sudo apt-get install -y git
      - id: outputstep
        run: |
          echo "VERSION=$(git describe --tags | sed 's/-[0-9]*-.*//g')" >> "$GITHUB_OUTPUT"
      - name: Change Version for Windows
        run: |
          sed -i "s/\"version\":.*/\"version\": \"$(git describe --tags | sed 's/-[0-9]*-.*//g')\",/g" package.json

          sed -i "s/\"version\":.*/\"version\": \"$(git describe --tags | sed 's/-[0-9]*-.*//g')\"/g" src-tauri/tauri.conf.json

          sed -i "s/version = \"0.0.0\"/version = \"$(git describe --tags | sed 's/-[0-9]*-.*//g')\"/g" src-tauri/Cargo.toml

          echo $(git describe --tags | sed 's/-[0-9]*-.*//g')

      - name: Upload Artifacts for Windows
        uses: actions/upload-artifact@v3
        with:
          name: source
          path: ./*
          if-no-files-found: error

  build-extension:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Build Popclipext
        run: |
          cd .scripts/popclip
          bash ./build.sh
          cd ../..
      - name: Build SnipDo
        run: |
          cd .scripts/snipdo
          bash ./build.sh
          cd ../..
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Pot.popclipextz
          path: .scripts/popclip/Pot.popclipextz
          if-no-files-found: error
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: pot.pbar
          path: .scripts/snipdo/pot.pbar
          if-no-files-found: error
      - name: Upload Release
        if: startsWith(github.ref, 'refs/tags')
        uses: softprops/action-gh-release@v1
        with:
          body_path: CHANGELOG
          token: ${{ secrets.TOKEN }}
          files: .scripts/popclip/Pot.popclipextz
      - name: Upload Release
        if: startsWith(github.ref, 'refs/tags')
        uses: softprops/action-gh-release@v1
        with:
          body_path: CHANGELOG
          token: ${{ secrets.TOKEN }}
          files: .scripts/snipdo/pot.pbar

  build-for-macos:
    needs: change-version
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest]
        target: [aarch64-apple-darwin, x86_64-apple-darwin]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: source
      - name: Setup Nodejs
        uses: actions/setup-node@v3
        with:
          node-version: 19
      - name: Install Rust Stable
        uses: dtolnay/rust-toolchain@stable
      - name: install dependencies
        run: |
          rustup target add ${{ matrix.target }}
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Install Dependencies
        run: pnpm install
      - name: Code Format
        run: pnpm prettier --write .
      - name: Build and Package
        run: |
          export TAURI_PRIVATE_KEY="${{ secrets.TAURI_PRIVATE_KEY }}"
          export TAURI_KEY_PASSWORD="${{ secrets.TAURI_KEY_PASSWORD }}"
          pnpm tauri build --target ${{ matrix.target }}
          sudo chmod +x src-tauri/resources/*
          chmod +x src-tauri/resources/*
      - name: Change File Name
        if: matrix.target == 'aarch64-apple-darwin'
        run: |
          sudo mv src-tauri/target/aarch64-apple-darwin/release/bundle/macos/pot.app.tar.gz src-tauri/target/aarch64-apple-darwin/release/bundle/macos/pot_${{needs.change-version.outputs.version}}_aarch64.app.tar.gz
          sudo mv src-tauri/target/aarch64-apple-darwin/release/bundle/macos/pot.app.tar.gz.sig src-tauri/target/aarch64-apple-darwin/release/bundle/macos/pot_${{needs.change-version.outputs.version}}_aarch64.app.tar.gz.sig
      - name: Change File Name
        if: matrix.target == 'x86_64-apple-darwin'
        run: |
          sudo mv src-tauri/target/x86_64-apple-darwin/release/bundle/macos/pot.app.tar.gz src-tauri/target/x86_64-apple-darwin/release/bundle/macos/pot_${{needs.change-version.outputs.version}}_x64.app.tar.gz
          sudo mv src-tauri/target/x86_64-apple-darwin/release/bundle/macos/pot.app.tar.gz.sig src-tauri/target/x86_64-apple-darwin/release/bundle/macos/pot_${{needs.change-version.outputs.version}}_x64.app.tar.gz.sig
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: macos_${{ matrix.target }}_dmg
          path: src-tauri/target/${{ matrix.target }}/release/bundle/dmg/*.dmg
          if-no-files-found: error
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: macos_${{ matrix.target }}_updater
          path: src-tauri/target/${{ matrix.target }}/release/bundle/macos/*.app*
          if-no-files-found: error
      - name: Upload Release
        if: startsWith(github.ref, 'refs/tags')
        uses: softprops/action-gh-release@v1
        with:
          body_path: CHANGELOG
          token: ${{ secrets.TOKEN }}
          files: src-tauri/target/${{ matrix.target }}/release/bundle/dmg/*.dmg
      - name: Upload Release
        if: startsWith(github.ref, 'refs/tags')
        uses: softprops/action-gh-release@v1
        with:
          body_path: CHANGELOG
          token: ${{ secrets.TOKEN }}
          files: src-tauri/target/${{ matrix.target }}/release/bundle/macos/*.app*

  build-for-windows:
    needs: change-version
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest]
        target: [x86_64-pc-windows-msvc, i686-pc-windows-msvc, aarch64-pc-windows-msvc]
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            toolchain: stable-x86_64-pc-windows-msvc
          - os: windows-latest
            target: i686-pc-windows-msvc
            toolchain: stable-i686-pc-windows-msvc
          - os: windows-latest
            target: aarch64-pc-windows-msvc
            toolchain: stable-aarch64-pc-windows-msvc
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: source
      - name: Setup Nodejs
        uses: actions/setup-node@v3
        with:
          node-version: 19
      - name: Install Rust Stable
        uses: dtolnay/rust-toolchain@stable
      - name: install dependencies
        run: |
          rustup target add ${{ matrix.target }}
          rustup toolchain install --force-non-host ${{ matrix.toolchain }}
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Install Dependencies
        run: pnpm install
      - name: Code Format
        run: pnpm prettier --write .
      - name: Build and Package
        run: |
          $env:TAURI_PRIVATE_KEY="${{ secrets.TAURI_PRIVATE_KEY }}"
          $env:TAURI_KEY_PASSWORD="${{ secrets.TAURI_KEY_PASSWORD }}"
          pnpm tauri build -b nsis,updater --target ${{ matrix.target }}
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: windows_${{ matrix.target }}
          path: src-tauri/target/${{ matrix.target }}/release/bundle/nsis/*.exe*
          if-no-files-found: error
      - name: Upload Release
        if: startsWith(github.ref, 'refs/tags')
        uses: softprops/action-gh-release@v1
        with:
          body_path: CHANGELOG
          token: ${{ secrets.TOKEN }}
          files: src-tauri/target/${{ matrix.target }}/release/bundle/nsis/*setup*

  build-for-linux:
    needs: change-version
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest]
        target: [x86_64-unknown-linux-gnu, i686-unknown-linux-gnu,aarch64-unknown-linux-gnu, armv7-unknown-linux-gnueabihf]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            toolchain: stable-x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: i686-unknown-linux-gnu
            toolchain: stable-i686-unknown-linux-gnu
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            toolchain: stable-aarch64-unknown-linux-gnu
          - os: ubuntu-latest
            target: armv7-unknown-linux-gnueabihf
            toolchain: stable-armv7-unknown-linux-gnueabihf
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: source
      - name: Build for Linux
        uses: ./.github/actions/build-for-linux
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          target: ${{ matrix.target }}
          toolchain: ${{ matrix.toolchain }}
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: linux_${{ matrix.target }}_deb
          path: src-tauri/target/${{ matrix.target }}/release/bundle/deb/*.deb
          if-no-files-found: error
      - name: Upload Artifacts
        if: matrix.target == 'x86_64-unknown-linux-gnu'
        uses: actions/upload-artifact@v3
        with:
          name: linux_${{ matrix.target }}_appimage
          path: src-tauri/target/${{ matrix.target }}/release/bundle/appimage/*.AppImage*
          if-no-files-found: error
      - name: Upload Release
        if: startsWith(github.ref, 'refs/tags') && matrix.target == 'x86_64-unknown-linux-gnu'
        uses: softprops/action-gh-release@v1
        with:
          body_path: CHANGELOG
          token: ${{ secrets.TOKEN }}
          files: src-tauri/target/${{ matrix.target }}/release/bundle/appimage/*.AppImage*
      - name: Upload Release
        if: startsWith(github.ref, 'refs/tags')
        uses: softprops/action-gh-release@v1
        with:
          body_path: CHANGELOG
          token: ${{ secrets.TOKEN }}
          files: src-tauri/target/${{ matrix.target }}/release/bundle/deb/*.deb

  sync-to-jihulab:
    needs: [change-version, build-for-macos, build-for-windows, build-for-linux]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags')
    steps:
    - name: Download Release
      run: |
        sudo apt-get install wget -y
        wget https://gitlab.com/gitlab-org/release-cli/-/releases/v0.16.0/downloads/bin/release-cli-linux-amd64
        sudo chmod +x ./release-cli-linux-amd64

        curl -H "Authorization: Bearer ${{ secrets.TOKEN }}" -s https://api.github.com/repos/pot-app/pot-desktop/releases/latest | grep "browser_download_url" | cut -d '"' -f 4 | xargs -n 1 wget

        for file in *.deb *.AppImage *.exe *.dmg *.zip *.sig *.tar.gz *.pbar *.popclipextz; do
            curl --header "PRIVATE-TOKEN: ${{ secrets.JIHULAB_TOKEN }}" --upload-file $file "https://jihulab.com/api/v4/projects/153845/packages/generic/pot-desktop/${{ needs.change-version.outputs.version }}/$file"
        done

        BODY=$(curl -H "Authorization: Bearer ${{ secrets.TOKEN }}" -s https://api.github.com/repos/pot-app/pot-desktop/releases/latest | grep "body" | cut -d '"' -f 4 | sed 's/\\n/\n/g' | sed 's/\\r//g')

        ./release-cli-linux-amd64 --server-url "https://jihulab.com" --project-id 153845 \
          --private-token ${{ secrets.JIHULAB_TOKEN }} \
          create --name "Release ${{needs.change-version.outputs.version}}" \
          --tag-name ${{needs.change-version.outputs.version}} --description "${BODY}" \
          --assets-link "{\"name\":\"pot.pbar\",\"url\":\"https://jihulab.com/api/v4/projects/153845/packages/generic/pot-desktop/${{needs.change-version.outputs.version}}/pot.pbar\"}" \
          --assets-link "{\"name\":\"Pot.popclipextz\",\"url\":\"https://jihulab.com/api/v4/projects/153845/packages/generic/pot-desktop/${{needs.change-version.outputs.version}}/Pot.popclipextz\"}" \
          --assets-link "{\"name\":\"pot_${{needs.change-version.outputs.version}}_aarch64.app.tar.gz\",\"url\":\"https://jihulab.com/api/v4/projects/153845/packages/generic/pot-desktop/${{needs.change-version.outputs.version}}/pot_${{needs.change-version.outputs.version}}_aarch64.app.tar.gz\"}" \
          --assets-link "{\"name\":\"pot_${{needs.change-version.outputs.version}}_aarch64.app.tar.gz.sig\",\"url\":\"https://jihulab.com/api/v4/projects/153845/packages/generic/pot-desktop/${{needs.change-version.outputs.version}}/pot_${{needs.change-version.outputs.version}}_aarch64.app.tar.gz.sig\"}" \
          --assets-link "{\"name\":\"pot_${{needs.change-version.outputs.version}}_aarch64.dmg\",\"url\":\"https://jihulab.com/api/v4/projects/153845/packages/generic/pot-desktop/${{needs.change-version.outputs.version}}/pot_${{needs.change-version.outputs.version}}_aarch64.dmg\",\"link_type\":\"package\"}" \
          --assets-link "{\"name\":\"pot_${{needs.change-version.outputs.version}}_x64.app.tar.gz\",\"url\":\"https://jihulab.com/api/v4/projects/153845/packages/generic/pot-desktop/${{needs.change-version.outputs.version}}/pot_${{needs.change-version.outputs.version}}_x64.app.tar.gz\"}" \
          --assets-link "{\"name\":\"pot_${{needs.change-version.outputs.version}}_x64.app.tar.gz.sig\",\"url\":\"https://jihulab.com/api/v4/projects/153845/packages/generic/pot-desktop/${{needs.change-version.outputs.version}}/pot_${{needs.change-version.outputs.version}}_x64.app.tar.gz.sig\"}" \
          --assets-link "{\"name\":\"pot_${{needs.change-version.outputs.version}}_x64.dmg\",\"url\":\"https://jihulab.com/api/v4/projects/153845/packages/generic/pot-desktop/${{needs.change-version.outputs.version}}/pot_${{needs.change-version.outputs.version}}_x64.dmg\",\"link_type\":\"package\"}" \
          --assets-link "{\"name\":\"pot_${{needs.change-version.outputs.version}}_amd64.AppImage\",\"url\":\"https://jihulab.com/api/v4/projects/153845/packages/generic/pot-desktop/${{needs.change-version.outputs.version}}/pot_${{needs.change-version.outputs.version}}_amd64.AppImage\",\"link_type\":\"package\"}" \
          --assets-link "{\"name\":\"pot_${{needs.change-version.outputs.version}}_amd64.AppImage.tar.gz\",\"url\":\"https://jihulab.com/api/v4/projects/153845/packages/generic/pot-desktop/${{needs.change-version.outputs.version}}/pot_${{needs.change-version.outputs.version}}_amd64.AppImage.tar.gz\"}" \
          --assets-link "{\"name\":\"pot_${{needs.change-version.outputs.version}}_amd64.AppImage.tar.gz.sig\",\"url\":\"https://jihulab.com/api/v4/projects/153845/packages/generic/pot-desktop/${{needs.change-version.outputs.version}}/pot_${{needs.change-version.outputs.version}}_amd64.AppImage.tar.gz.sig\"}" \
          --assets-link "{\"name\":\"pot_${{needs.change-version.outputs.version}}_amd64.deb\",\"url\":\"https://jihulab.com/api/v4/projects/153845/packages/generic/pot-desktop/${{needs.change-version.outputs.version}}/pot_${{needs.change-version.outputs.version}}_amd64.deb\",\"link_type\":\"package\"}" \
          --assets-link "{\"name\":\"pot_${{needs.change-version.outputs.version}}_arm64.deb\",\"url\":\"https://jihulab.com/api/v4/projects/153845/packages/generic/pot-desktop/${{needs.change-version.outputs.version}}/pot_${{needs.change-version.outputs.version}}_arm64.deb\",\"link_type\":\"package\"}" \
          --assets-link "{\"name\":\"pot_${{needs.change-version.outputs.version}}_armhf.deb\",\"url\":\"https://jihulab.com/api/v4/projects/153845/packages/generic/pot-desktop/${{needs.change-version.outputs.version}}/pot_${{needs.change-version.outputs.version}}_armhf.deb\",\"link_type\":\"package\"}" \
          --assets-link "{\"name\":\"pot_${{needs.change-version.outputs.version}}_i386.deb\",\"url\":\"https://jihulab.com/api/v4/projects/153845/packages/generic/pot-desktop/${{needs.change-version.outputs.version}}/pot_${{needs.change-version.outputs.version}}_i386.deb\",\"link_type\":\"package\"}" \
          --assets-link "{\"name\":\"pot_${{needs.change-version.outputs.version}}_x64-setup.exe\",\"url\":\"https://jihulab.com/api/v4/projects/153845/packages/generic/pot-desktop/${{needs.change-version.outputs.version}}/pot_${{needs.change-version.outputs.version}}_x64-setup.exe\",\"link_type\":\"package\"}" \
          --assets-link "{\"name\":\"pot_${{needs.change-version.outputs.version}}_x64-setup.nsis.zip\",\"url\":\"https://jihulab.com/api/v4/projects/153845/packages/generic/pot-desktop/${{needs.change-version.outputs.version}}/pot_${{needs.change-version.outputs.version}}_x64-setup.nsis.zip\"}" \
          --assets-link "{\"name\":\"pot_${{needs.change-version.outputs.version}}_x64-setup.nsis.zip.sig\",\"url\":\"https://jihulab.com/api/v4/projects/153845/packages/generic/pot-desktop/${{needs.change-version.outputs.version}}/pot_${{needs.change-version.outputs.version}}_x64-setup.nsis.zip.sig\"}" \
          --assets-link "{\"name\":\"pot_${{needs.change-version.outputs.version}}_x86-setup.exe\",\"url\":\"https://jihulab.com/api/v4/projects/153845/packages/generic/pot-desktop/${{needs.change-version.outputs.version}}/pot_${{needs.change-version.outputs.version}}_x86-setup.exe\",\"link_type\":\"package\"}" \
          --assets-link "{\"name\":\"pot_${{needs.change-version.outputs.version}}_x86-setup.nsis.zip\",\"url\":\"https://jihulab.com/api/v4/projects/153845/packages/generic/pot-desktop/${{needs.change-version.outputs.version}}/pot_${{needs.change-version.outputs.version}}_x86-setup.nsis.zip\"}" \
          --assets-link "{\"name\":\"pot_${{needs.change-version.outputs.version}}_x86-setup.nsis.zip.sig\",\"url\":\"https://jihulab.com/api/v4/projects/153845/packages/generic/pot-desktop/${{needs.change-version.outputs.version}}/pot_${{needs.change-version.outputs.version}}_x86-setup.nsis.zip.sig\"}"

  release-update:
    needs: [change-version, sync-to-jihulab]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: pnpm install
        run: pnpm install
      - name: Release updater file
        run: pnpm run updater
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
      - name: Upload Release
        uses: softprops/action-gh-release@v1
        with:
          body: ${{ needs.change-version.outputs.version }}
          tag_name: updater
          token: ${{ secrets.TOKEN }}
          files: update.json
      - name: Upload Jihulab Release
        run: |
          curl --header "PRIVATE-TOKEN: ${{ secrets.JIHULAB_TOKEN }}" --upload-file ./update.json "https://jihulab.com/api/v4/projects/153845/packages/generic/pot-desktop/updater/update.json"

  homebrew:
    name: Update Homebrew cask
    needs: [change-version, build-for-macos]
    runs-on: macos-latest
    if: startsWith(github.ref, 'refs/tags')
    steps:
      - name: Set up Homebrew
        uses: Homebrew/actions/setup-homebrew@master
      - name: Set up Git
        run: |
          # sudo apt-get install git -y
          git config --global user.email support@pot-app.com
          git config --global user.name pot-app
      - name: Update Homebrew cask
        env:
          HOMEBREW_GITHUB_API_TOKEN: ${{ secrets.TOKEN }}
        run: |
          brew tap pot-app/homebrew-tap
          brew update
          brew bump-cask-pr pot --version ${{ needs.change-version.outputs.version }} --no-browse

  winget:
    name: Update WinGet Package
    needs: [change-version, build-for-windows]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags')
    steps:
      - name: Upload WinGet
        if: startsWith(github.ref, 'refs/tags')
        uses: vedantmgoyal2009/winget-releaser@v2
        with:
          identifier: Pylogmon.pot
          version: ${{ needs.change-version.outputs.version }}
          installers-regex: '\.exe$'
          token: ${{ secrets.TOKEN }}
          fork-user: Pylogmon
        continue-on-error: true